@test "Test_offline_encrypted_image $IMAGE $IMAGE_SIZE $RUNTIMECLASSNAME" {
	set_runtimeclass_config $RUNTIMECLASSNAME
	#clear_kernel_params
	remove_kernel_param "agent.aa_kbc_params"
	if [ $(echo ${RUNTIMECLASSNAME} | grep tdx | wc -l) -gt 0 ]; then
        skip
    fi
	switch_image_service_offload on
	$TEST_COCO_PATH/../run/losetup-crt.sh $ROOTFS_IMAGE_PATH c
	switch_measured_rootfs_verity_scheme none
	#remove_kernel_param "agent.enable_signature_verification"
	set_key_value "default_vcpus" "1" "$RUNTIME_CONFIG_PATH/${CURRENT_CONFIG_FILE}"
	set_key_value "default_memory" "2048" "$RUNTIME_CONFIG_PATH/${CURRENT_CONFIG_FILE}"
	set_key_value "default_vcpus" "2" "$RUNTIME_CONFIG_PATH/${CURRENT_CONFIG_FILE}"
	sizes=$($IMAGE| sed 's/[^0-9 ]//g')
	set_key_value "default_memory" "16384" "$RUNTIME_CONFIG_PATH/${CURRENT_CONFIG_FILE}"
	#generate_offline_encrypted_image $IMAGE
	setup_offline_decryption_files_in_guest
	pod_config="$(new_pod_config_normal $test_coco_path/../fixtures/offline-encrypted-config.yaml.in "$IMAGE" "$RUNTIMECLASSNAME" "$REGISTRTYIMAGE:offline-encrypted")"
	pull_encrypted_image_inside_guest_with_decryption_key $pod_config
	rm $pod_config
}
